// use serde::Deserialize;
// use serde_json::Value;
// use tokio_tungstenite::tungstenite::protocol::CloseFrame;

// use twilight_model::gateway::{
//     payload::incoming::*,
//     OpCode,
// };

// #[derive(Deserialize)]
// pub struct MinimalEvent {
//     pub op: OpCode,
//     pub d: Value,
//     pub s: Option<u64>,
//     pub t: Option<String>,
// }

// // #[derive(Clone, Debug, PartialEq)]
// // pub enum Event {
// //     AutoModerationActionExecution(AutoModerationActionExecution),
// //     AutoModerationRuleCreate(AutoModerationRuleCreate),
// //     AutoModerationRuleDelete(AutoModerationRuleDelete),
// //     AutoModerationRuleUpdate(AutoModerationRuleUpdate),
// //     BanAdd(BanAdd),
// //     BanRemove(BanRemove),
// //     ChannelCreate(Box<ChannelCreate>),
// //     ChannelDelete(Box<ChannelDelete>),
// //     ChannelPinsUpdate(ChannelPinsUpdate),
// //     ChannelUpdate(Box<ChannelUpdate>),
// //     CommandPermissionsUpdate(CommandPermissionsUpdate),
// //     // EntitlementCreate(EntitlementCreate),
// //     // EntitlementDelete(EntitlementDelete),
// //     // EntitlementUpdate(EntitlementUpdate),
// //     GatewayClose(Option<CloseFrame<'static>>),
// //     GatewayHeartbeat(u64),
// //     GatewayHeartbeatAck,
// //     GatewayHello(Hello),
// //     GatewayInvalidateSession(bool),
// //     GatewayReconnect,
// //     GuildAuditLogEntryCreate(Box<GuildAuditLogEntryCreate>),
// //     GuildCreate(Box<GuildCreate>),
// //     GuildDelete(GuildDelete),
// //     GuildEmojisUpdate(GuildEmojisUpdate),
// //     GuildIntegrationsUpdate(GuildIntegrationsUpdate),
// //     GuildScheduledEventCreate(Box<GuildScheduledEventCreate>),
// //     GuildScheduledEventDelete(Box<GuildScheduledEventDelete>),
// //     GuildScheduledEventUpdate(Box<GuildScheduledEventUpdate>),
// //     GuildScheduledEventUserAdd(GuildScheduledEventUserAdd),
// //     GuildScheduledEventUserRemove(GuildScheduledEventUserRemove),
// //     GuildStickersUpdate(GuildStickersUpdate),
// //     GuildUpdate(Box<GuildUpdate>),
// //     IntegrationCreate(Box<IntegrationCreate>),
// //     IntegrationDelete(IntegrationDelete),
// //     IntegrationUpdate(Box<IntegrationUpdate>),
// //     InteractionCreate(Box<InteractionCreate>),
// //     InviteCreate(Box<InviteCreate>),
// //     InviteDelete(InviteDelete),
// //     MemberAdd(Box<MemberAdd>),
// //     MemberRemove(MemberRemove),
// //     MemberUpdate(Box<MemberUpdate>),
// //     MemberChunk(MemberChunk),
// //     MessageCreate(Box<MessageCreate>),
// //     MessageDelete(MessageDelete),
// //     MessageDeleteBulk(MessageDeleteBulk),
// //     // MessagePollVoteAdd(MessagePollVoteAdd),
// //     // MessagePollVoteRemove(MessagePollVoteRemove),
// //     MessageUpdate(Box<MessageUpdate>),
// //     PresenceUpdate(Box<PresenceUpdate>),
// //     ReactionAdd(Box<ReactionAdd>),
// //     ReactionRemove(Box<ReactionRemove>),
// //     ReactionRemoveAll(ReactionRemoveAll),
// //     ReactionRemoveEmoji(ReactionRemoveEmoji),
// //     Ready(Box<Ready>),
// //     Resumed,
// //     RoleCreate(RoleCreate),
// //     RoleDelete(RoleDelete),
// //     RoleUpdate(RoleUpdate),
// //     StageInstanceCreate(StageInstanceCreate),
// //     StageInstanceDelete(StageInstanceDelete),
// //     StageInstanceUpdate(StageInstanceUpdate),
// //     ThreadCreate(Box<ThreadCreate>),
// //     ThreadDelete(ThreadDelete),
// //     ThreadListSync(ThreadListSync),
// //     ThreadMemberUpdate(Box<ThreadMemberUpdate>),
// //     ThreadMembersUpdate(ThreadMembersUpdate),
// //     ThreadUpdate(Box<ThreadUpdate>),
// //     TypingStart(Box<TypingStart>),
// //     UnavailableGuild(UnavailableGuild),
// //     UserUpdate(UserUpdate),
// //     VoiceServerUpdate(VoiceServerUpdate),
// //     VoiceStateUpdate(Box<VoiceStateUpdate>),
// //     WebhooksUpdate(WebhooksUpdate),
// // }
